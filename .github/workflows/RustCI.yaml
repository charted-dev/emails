# üêª‚Äç‚ùÑÔ∏èüíå email-service: charted's email service built in Rust that can be connected via gRPC
# Copyright 2023 Noelware, LLC. <team@noelware.org>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Rust CI
on:
  workflow_dispatch: {}
  pull_request:
    types: [opened, synchronize]
    branches:
      - 'issue/gh-**'
      - 'feat/**'
      - main
    paths-ignore:
      - '.github/**'
      - '.vscode/**'
      - 'assets/**'
      - .gitignore
      - '**.md'
      - LICENSE
      - renovate.json
  push:
    branches:
      - 'issue/gh-**'
      - 'feat/**'
      - main
    paths-ignore:
      - '.github/**'
      - '.vscode/**'
      - 'assets/**'
      - .gitignore
      - '**.md'
      - LICENSE
      - renovate.json
jobs:
  ci:
    name: Rust CI [${{matrix.toolchain}}, ${{matrix.runner}}]
    runs-on: ${{matrix.runner}}
    strategy:
      matrix:
        runner: [windows-latest, macos-latest, ubuntu-latest, self-hosted]
        toolchain: [nightly, stable]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{matrix.toolchain}}
          override: true
          components: rustfmt, clippy

      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2

      - name: Install Protoc
        uses: Noelware/setup-protoc@1.0.2
        with:
          repo-token: ${{secrets.GITHUB_TOKEN}}

      - name: Check for compile errors
        run: cargo build
        env:
          CARGO_INCREMENTAL: 1

      # Only run Clippy in the nightly toolchain and Ubuntu, im biased ok
      - name: Clippy
        if: ${{matrix.runner == 'ubuntu-latest' && matrix.toolchain == 'nightly'}}
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{secrets.GITHUB_TOKEN}}
          args: --all-features
